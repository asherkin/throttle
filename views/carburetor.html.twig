{% extends 'layout.html.twig' %}

{% set logout_to_index = true %}
{% set supports_mobile = true %}
 
{% block content %}
<div class="clearfix" style="margin-bottom: 20px;">
    <a class="btn btn-default pull-left" href="{{ path('details', {'id': id}) }}"><i class="icon-chevron-left"></i> Back to Details</a>
    <a class="btn btn-default pull-right" href="{{ path('view', {'id': id}) }}">Even More Raw <i class="icon-chevron-right"></i></a>
</div>
<div id="loading" class="progress" style="background-color: #fff; border: 1px solid #ccc; height: 40px;"><div class="progress-bar" style="width: 0%"></div></div>
<div id="content" class="hidden">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#tab-stack" data-toggle="tab">Stack</a></li>
        <li><a href="#tab-memory" data-toggle="tab">Memory</a></li>
        <li><a href="#tab-raw" data-toggle="tab">Raw</a></li>
    </ul>
    <div class="tab-content">
        <pre class="tab-pane active" id="tab-stack"></pre>
        <pre class="tab-pane" id="tab-memory"></pre>
        <pre class="tab-pane" id="tab-raw"></pre>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script src="{{ app.request.baseUrl }}/js/carburetor-analyze.js"></script>
<script src="{{ app.request.baseUrl }}/js/carburetor-memory.js"></script>
<script type="application/javascript">
var loading = $('#loading');
var progress = $('#loading .progress-bar');
var content = $('#content');

var tabStack = $('#tab-stack');
var tabMemory = $('#tab-memory');
var tabRaw = $('#tab-raw');

var oReq = new XMLHttpRequest();
oReq.open('GET', '{{ path('carburetor_data', { id: id, scan: scan, symbols: symbols }) | escape('js') }}', true);

oReq.onerror = function(oEvent) {
    loading.removeClass('active');
    loading.removeClass('progress-striped');
    progress.addClass('progress-bar-danger');
};

oReq.onprogress = function(oEvent) {
    if (oEvent.lengthComputable) {
        progress.css('width', ((oEvent.loaded / oEvent.total) * 100) + '%');
        loading.removeClass('progress-striped');
        loading.removeClass('active');
    } else {
        progress.css('width', '100%');
        loading.addClass('progress-striped');
        loading.addClass('active');
    }
};

oReq.onload = function(oEvent) {
    if (oReq.status !== 200) {
        return oReq.onerror();
    }

    let data = null;
    try {
        data = JSON.parse(oReq.response);
    } catch (e) {
        return oReq.onerror();
    }

    loading.remove();
    content.removeClass('hidden');

    $('#content nav-tabs a').click(function(e) {
        e.preventDefault();
        $(this).tab('show');
    });

    const original = console.log;

    console.log = function(s) {
        tabStack.append(document.createTextNode(s + '\n'));
    };
    analyze(data);

    console.log = function(s) {
        tabMemory.append(document.createTextNode(s + '\n'));
    };
    memory(data);

    console.log = original;

    tabRaw.text(JSON.stringify(data, null, 2));
};

oReq.send(null);
</script>
{% endblock %}

